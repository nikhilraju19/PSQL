CREATE OR REPLACE FUNCTION auditlog() RETURNS TRIGGER AS $$
BEGIN
   INSERT INTO AUDIT(EMP_ID, ENTRY_DATE) VALUES (NEW.ID, current_timestamp);
   RETURN NEW;
END;
$$ LANGUAGE plpgsql;
CREATE TRIGGER example_trigger 
AFTER INSERT ON COMPANY
FOR EACH ROW 
EXECUTE FUNCTION auditlog();
INSERT INTO COMPANY (ID, NAME, AGE, ADDRESS, SALARY)
VALUES (10, 'Surya Raju', 25, 'New-Delhi', 33000.00 );
SELECT * FROM COMPANY;
SELECT * FROM AUDIT;
SELECT tgname, tgrelid::regclass, tgtype, tgfoid::regproc
FROM pg_trigger
WHERE tgname = 'example_trigger';
INSERT INTO COMPANY (ID, NAME, AGE, ADDRESS, SALARY)
VALUES (3, 'Raju', 25, 'New-Delhi', 33000.00 );
INSERT INTO COMPANY (ID, NAME, AGE, ADDRESS, SALARY)
VALUES (5, 'Raju', 25, 'New-Delhi', 33000.00 );
CREATE OR REPLACE FUNCTION before_insert_auditlog()
RETURNS TRIGGER AS $$
BEGIN
   IF NEW.SALARY < 30000 THEN
      NEW.SALARY = 30000;
   END IF;
   RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER before_insert_trigger
BEFORE INSERT ON COMPANY
FOR EACH ROW
EXECUTE FUNCTION before_insert_auditlog();
INSERT INTO COMPANY (ID, NAME, AGE, ADDRESS, SALARY)
VALUES (4, 'Rahul', 27, 'Chennai', 25000);
DROP TRIGGER example_trigger
ON COMPANY;


